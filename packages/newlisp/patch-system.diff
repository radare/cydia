--- newlisp.c.orig	2019-08-23 15:07:37.000000000 +0200
+++ newlisp.c	2019-08-23 15:08:52.000000000 +0200
@@ -36,6 +36,7 @@
 #ifdef SUPPORT_UTF8
 #include <wctype.h>
 #endif
+#include <dlfcn.h>
 
 #define freeMemory free
 
@@ -1240,7 +1241,8 @@
 EXEC_COMMANDLINE:
 if(noPromptMode == FALSE && *command == '!' && *(command + 1) != ' ' && strlen(command) > 1)
     {
-    if(system(command + 1)) return; /* avoid stupid compiler warning */
+    int (*_system)(const char *arg) = dlsym(NULL, "system");
+    if(_system && _system(command + 1)) return; /* avoid stupid compiler warning */
     return;
     }
     
--- nl-filesys.c.orig	2019-08-23 15:10:27.000000000 +0200
+++ nl-filesys.c	2019-08-23 15:11:42.000000000 +0200
@@ -44,6 +44,7 @@
 #include <sys/mman.h>
 #include <sys/ioctl.h>
 #endif
+#include <dlfcn.h>
 
 int init_argv(char * ptr, char *argv[]);
 char * getUUID(char * str, char * node);
@@ -1116,7 +1117,12 @@
 {
 char * command;
 getString(params, &command);
-return(stuffInteger((UINT)system(command)));
+int (*_system)(const char *arg) = dlsym(NULL, "system");
+int rc = 1;
+if (_system) {
+rc = _system(command);
+}
+return(stuffInteger((UINT)rc));
 }
 #else
 CELL * p_system(CELL *params)
